(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{427:function(s,t,a){"use strict";a.r(t);var n=a(2),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_1-2-运算符-流程控制语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-运算符-流程控制语句"}},[s._v("#")]),s._v(" 1-2 运算符 流程控制语句")]),s._v(" "),t("h2",{attrs:{id:"一、运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、运算符"}},[s._v("#")]),s._v(" 一、运算符")]),s._v(" "),t("p",[s._v("运算符（operator）也被称为==操作符==，是用于实现赋值、比较和执行算数运算等功能的符号。\nJavaScript中常用的运算符有")]),s._v(" "),t("ul",[t("li",[s._v("算数运算符")]),s._v(" "),t("li",[s._v("递增和递减运算符")]),s._v(" "),t("li",[s._v("比较运算符")]),s._v(" "),t("li",[s._v("逻辑运算符")]),s._v(" "),t("li",[s._v("赋值运算符")])]),s._v(" "),t("h3",{attrs:{id:"_1-算术运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-算术运算符"}},[s._v("#")]),s._v(" 1. 算术运算符")]),s._v(" "),t("p",[s._v("算术运算使用的符号，用于执行两个变量或值的算术运算。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hasakwebblogimg.oss-cn-hangzhou.aliyuncs.com/202211161048557.png",alt:"culculate1"}})]),s._v(" "),t("h4",{attrs:{id:"浮点数的精度问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浮点数的精度问题"}},[s._v("#")]),s._v(" 浮点数的精度问题")]),s._v(" "),t("p",[s._v("浮点数值的最高精度是 17 位小数，但在进行算术计算时其精确度远远不如整数。")]),s._v(" "),t("div",{staticClass:"language-HTML line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token script"}},[t("span",{pre:!0,attrs:{class:"token language-javascript"}},[s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 浮点数 算数运算里面会有问题")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0.30000000000000004")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.07")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 7.000000000000001")]),s._v("\n  \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 我们不能直接拿着浮点数来进行相比较 是否相等")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("==所以：不要直接判断两个浮点数是否相等！==")]),s._v(" "),t("h4",{attrs:{id:"表达式和返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表达式和返回值"}},[s._v("#")]),s._v(" 表达式和返回值")]),s._v(" "),t("p",[s._v("**表达式：**是由数字、运算符、变量等以能求得数值的有意义排列方法所得的组合\n简单理解：是由数字、运算符、变量等组成的式子\n表达式最终都会有一个结果，返回给我们，我们成为返回值")]),s._v(" "),t("h4",{attrs:{id:"递增和递减运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#递增和递减运算符"}},[s._v("#")]),s._v(" 递增和递减运算符")]),s._v(" "),t("p",[s._v("如果需要反复给数字变量添加或减去1，可以使用"),t("font",{attrs:{color:"#d000"}},[s._v("递增（++）")]),s._v("和"),t("font",{attrs:{color:"#d000"}},[s._v("递减（--）")]),s._v("运算符来完成。")],1),s._v(" "),t("ul",[t("li",[s._v("放在变量前面时，我们可以称为"),t("font",{attrs:{color:"#d000"}},[s._v("前置递增（递减）运算符")])],1),s._v(" "),t("li",[s._v("放在变量后面时，我们可以称为"),t("font",{attrs:{color:"#d000"}},[s._v("后置递增（递减）运算符")])],1),s._v(" "),t("li",[t("strong",[s._v("注意")]),s._v("：递增和递减运算符必须和变量配合使用")])]),s._v(" "),t("h4",{attrs:{id:"前置递增和后置递增小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置递增和后置递增小结"}},[s._v("#")]),s._v(" 前置递增和后置递增小结")]),s._v(" "),t("ul",[t("li",[s._v("前置递增和后置递增运算符可以简化代码的编写，让变量的值 + 1  比以前写法更简单")]),s._v(" "),t("li",[s._v("单独使用时运行结果相同，与其他代码联用时执行结果会不同")]),s._v(" "),t("li",[s._v("后置：先原值运算，后自加（先人后己）")]),s._v(" "),t("li",[s._v("前置：先自加，后运算（先已后人）")]),s._v(" "),t("li",[s._v("开发时，大多使用后置递增/减，并且代码独占一行，如：num++;  num--;")])]),s._v(" "),t("h3",{attrs:{id:"_2-比较运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-比较运算符"}},[s._v("#")]),s._v(" 2. 比较运算符")]),s._v(" "),t("p",[s._v("概念：比较运算符（关系运算符）是"),t("font",{attrs:{color:"#d00"}},[s._v("两个数据进行比较时所使用的运算符")]),s._v("，比较运算后，"),t("font",{attrs:{color:"#d00"}},[s._v("会返回一个布尔值（true / false)")]),s._v("作为比较运算的结果。")],1),s._v(" "),t("p",[t("img",{attrs:{src:"https://hasakwebblogimg.oss-cn-hangzhou.aliyuncs.com/202211161109614.png",alt:"culculate2"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hasakwebblogimg.oss-cn-hangzhou.aliyuncs.com/202211161109518.png",alt:"culculate3"}})]),s._v(" "),t("div",{staticClass:"language-HTML line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token script"}},[t("span",{pre:!0,attrs:{class:"token language-javascript"}},[s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1. 我们程序里面的等于符号 是 ==  默认转换数据类型 会把字符串型的数据转换为数字型")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//   只要求值相等就可以")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pink老师'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'刘德华'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// flase")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 我们程序里面有全等 一模一样  要求 两侧的值 还有 数据类型完全一致才可以 true")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'18'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h3",{attrs:{id:"_3-逻辑运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-逻辑运算符"}},[s._v("#")]),s._v(" 3. 逻辑运算符")]),s._v(" "),t("p",[s._v("概念：逻辑运算符是用来进行布尔值运算的运算符，其返回值也是布尔值。后面开发中经常用于多个条件的判断")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hasakwebblogimg.oss-cn-hangzhou.aliyuncs.com/202211161110057.png",alt:"culculate4"}})]),s._v(" "),t("h4",{attrs:{id:"短路运算-逻辑中断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#短路运算-逻辑中断"}},[s._v("#")]),s._v(" 短路运算（逻辑中断）")]),s._v(" "),t("p",[s._v("**短路运算的原理：**当有多个表达式（值）时,左边的表达式值可以确定结果时,就不再继续运算右边的表达式的值;")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("逻辑与")]),s._v(" "),t("ul",[t("li",[s._v("语法： 表达式1 && 表达式2")]),s._v(" "),t("li",[s._v("==如果第一个表达式的值为真，则返回表达式2==")]),s._v(" "),t("li",[s._v("如果第一个表达式的值为假，则返回表达式1")])])]),s._v(" "),t("li",[t("strong",[s._v("逻辑或")]),s._v(" "),t("ul",[t("li",[s._v("语法： "),t("strong",[s._v("表达式1 || 表达式2")])]),s._v(" "),t("li",[s._v("如果第一个表达式的值为真，则返回表达式1")]),s._v(" "),t("li",[s._v("如果第一个表达式的值为假，则返回表达式2")])])])]),s._v(" "),t("div",{staticClass:"language-html line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token script"}},[t("span",{pre:!0,attrs:{class:"token language-javascript"}},[s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1. 用我们的布尔值参与的逻辑运算  true && false  == false ")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2. 123 && 456  是值 或者是 表达式 参与逻辑运算？ ")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3. 逻辑与短路运算  如果表达式1 结果为真 则返回表达式2  如果表达式1为假 那么返回表达式1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    如果有空的或者否定的为假 其余是真的  0  ''  null undefined  NaN")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 456")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  0")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("56789")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("56789")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ''")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4. 逻辑或短路运算  如果表达式1 结果为真 则返回的是表达式1 ")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    如果表达式1 结果为假 则返回表达式2")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 456")]),s._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 逻辑中断很重要 它会影响我们程序运行结果")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h3",{attrs:{id:"_4-赋值运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-赋值运算符"}},[s._v("#")]),s._v(" 4. "),t("strong",[s._v("赋值运算符")])]),s._v(" "),t("p",[s._v("概念：用来把数据赋值给变量的运算符。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hasakwebblogimg.oss-cn-hangzhou.aliyuncs.com/202211161113894.png",alt:"culculate5"}})]),s._v(" "),t("h3",{attrs:{id:"_5-运算符优先级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-运算符优先级"}},[s._v("#")]),s._v(" 5.  运算符优先级")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://hasakwebblogimg.oss-cn-hangzhou.aliyuncs.com/202211161114061.png",alt:"culculate6"}})]),s._v(" "),t("h2",{attrs:{id:"二、-流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、-流程控制"}},[s._v("#")]),s._v(" 二、 流程控制")]),s._v(" "),t("p",[s._v("在一个程序执行的过程中，各条代码的执行顺序对程序的结果是有直接影响的。很多时候我们要通过控制代码的执行顺序来实现我们要完成的功能。\n简单理解： 流程控制就是来控制我们的代码按照什么结构顺序来执行\n流程控制主要有三种结构，分别是"),t("font",{attrs:{color:"#d00"}},[s._v("顺序结构、分支结构和循环结构")]),s._v("，这三种结构代表三种代码执行的顺序。")],1),s._v(" "),t("p",[t("img",{attrs:{src:"https://hasakwebblogimg.oss-cn-hangzhou.aliyuncs.com/202211161115332.png",alt:"list1"}})]),s._v(" "),t("h3",{attrs:{id:"_2-1-顺序流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-顺序流程控制"}},[s._v("#")]),s._v(" 2.1 顺序流程控制")]),s._v(" "),t("p",[s._v("顺序结构是程序中最简单、最基本的流程控制，它没有特定的语法结构，程序会按照"),t("font",{attrs:{color:"#d00"}},[s._v("代码的先后顺序，依次执行")]),s._v("，程序中大多数的代码都是这样执行的。")],1),s._v(" "),t("h3",{attrs:{id:"_2-2-分支流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-分支流程控制"}},[s._v("#")]),s._v(" 2.2 分支流程控制")]),s._v(" "),t("p",[s._v("由上到下执行代码的过程中，根据不同的条件，执行不同的路径代码（执行代码多选一的过程），从而得到不同的结果")]),s._v(" "),t("p",[t("strong",[s._v("if语句")])]),s._v(" "),t("p",[t("strong",[s._v("三元表达式")])]),s._v(" "),t("p",[t("strong",[s._v("switch语句")])]),s._v(" "),t("p",[t("strong",[s._v("switch语句和 if else if语句的区别")])]),s._v(" "),t("ol",[t("li",[s._v("一般情况下，它们两个语句可以相互替换")]),s._v(" "),t("li",[s._v("switch...case语句通常处理case为比较确定值的情况， 而if…else…语句更加灵活，常用于范围判断(大于、等于某个范围)")]),s._v(" "),t("li",[s._v("switch 语句进行条件判断后直接执行到程序的条件语句，效率更高。而if…else 语句有几种条件，就得判断多少次。")]),s._v(" "),t("li",[s._v("当分支比较少时，if… else语句的执行效率比 switch语句高。")]),s._v(" "),t("li",[s._v("当分支比较多时，switch语句的执行效率比较高，而且结构更清晰。")])]),s._v(" "),t("h3",{attrs:{id:"_2-3-循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-循环"}},[s._v("#")]),s._v(" 2.3 循环")]),s._v(" "),t("p",[t("strong",[s._v("for循环")])]),s._v(" "),t("p",[s._v("**初始化变量：**通常被用于初始化一个计数器，该表达式可以使用 var 关键字声明新的变量，这个变量帮我们来记录次数。\n**条件表达式：**用于确定每一次循环是否能被执行。如果结果是 true 就继续循环，否则退出循环。\n**操作表达式：**每次循环的最后都要执行的表达式。通常被用于更新或者递增计数器变量。当然，递减变量也是可以的。")]),s._v(" "),t("p",[t("strong",[s._v("断点调试")])]),s._v(" "),t("p",[s._v("断点调试是指自己在程序的某一行设置一个断点，调试时，程序运行到这一行就会停住，然后你可以一步一步往下调试，调试过程中可以看各个变量当前的值，出错的话，调试到出错的代码行即显示错误，停下。\n"),t("font",{attrs:{color:"#d00"}},[s._v("断点调试可以帮我们观察程序的运行过程")]),s._v("\n浏览器中按 F12--\x3e sources --\x3e找到需要调试的文件--\x3e在程序的某一行设置断点\nWatch: 监视，通过watch可以监视变量的值的变化，非常的常用。\nF11: 程序单步执行，让程序一行一行的执行，这个时候，观察watch中变量的值的变化。\n代码调试的能力非常重要，只有学会了代码调试，才能学会自己解决bug的能力。初学者不要觉得调试代码麻烦就不去调试，知识点花点功夫肯定学的会，但是代码调试这个东西，自己不去练，永远都学不会。\n今天学的代码调试非常的简单，只要求同学们记住代码调试的这几个按钮的作用即可，后面还会学到很多的代码调试技巧。")],1),s._v(" "),t("p",[t("strong",[s._v("双重for循环")])]),s._v(" "),t("p",[t("strong",[s._v("while循环")])]),s._v(" "),t("p",[t("strong",[s._v("do while循环")])]),s._v(" "),t("p",[t("strong",[s._v("小结")])]),s._v(" "),t("ul",[t("li",[s._v("JS 中循环有 for 、while 、 do while")]),s._v(" "),t("li",[s._v("三个循环很多情况下都可以相互替代使用")]),s._v(" "),t("li",[s._v("如果是用来计次数，跟数字相关的，三者使用基本相同，但是我们更喜欢用 for")]),s._v(" "),t("li",[s._v("while 和 do…while 可以做更复杂的判断条件，比 for 循环灵活一些")]),s._v(" "),t("li",[s._v("while 和 do…while 执行顺序不一样，while先判断后执行，do…while 先执再判断执行")]),s._v(" "),t("li",[s._v("do…while 至少会执行一次循环体， 而 while 可能一次也不执行")]),s._v(" "),t("li",[s._v("实际工作中，"),t("font",{attrs:{color:"#d00"}},[s._v("我们更常用for循环语句")]),s._v("，它写法更简洁直观")],1)]),s._v(" "),t("p",[t("strong",[s._v("continue关键字")])]),s._v(" "),t("p",[s._v("==continue== 关键字用于立即跳出本次循环，继续下一次循环（本次循环体中 continue之后的代码就会少执行一次）")]),s._v(" "),t("p",[t("strong",[s._v("break关键字")])]),s._v(" "),t("p",[s._v("==break== 关键字用于立即跳出整个循环（循环结束）")])])}),[],!1,null,null,null);t.default=r.exports}}]);